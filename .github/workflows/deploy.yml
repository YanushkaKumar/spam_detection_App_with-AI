name: Deploy to Azure VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Azure VM
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AZURE_VM_IP }}
        username: ${{ secrets.AZURE_VM_USER }}
        password: ${{ secrets.AZURE_VM_PASSWORD }}
        port: 22
        timeout: 300s
        command_timeout: 60s
        script: |
          set -e
          
          echo "Starting deployment..."
          
          # Create backup directory
          if [ -d "~/backend" ]; then
            echo "Backing up existing deployment..."
            cp -r ~/backend ~/backend_backup_$(date +%Y%m%d_%H%M%S) || true
          fi
          
          # Create project directory
          mkdir -p ~/backend
          cd ~/backend
          
          # Clone/pull latest code (alternative to SCP)
          if [ -d ".git" ]; then
            echo "Updating existing repository..."
            git fetch origin
            git reset --hard origin/main
          else
            echo "Cloning repository..."
            git clone https://github.com/${{ github.repository }}.git .
          fi
          
          # Update system packages
          echo "Updating packages..."
          sudo apt update
          sudo apt install -y python3.10-venv python3-pip
          
          # Create virtual environment if it doesn't exist
          echo "Setting up virtual environment..."
          if [ ! -d "venv" ]; then
            python3 -m venv venv
          fi
          
          # Activate virtual environment and install dependencies
          echo "Installing dependencies..."
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # Stop existing process
          echo "Stopping existing process..."
          pkill -f Api.py || echo "No existing process found"
          sleep 2
          
          # Start the application
          echo "Starting application..."
          nohup python3 Api.py > log.txt 2>&1 &
          APP_PID=$!
          echo "Application started with PID: $APP_PID"
          
          # Wait and verify
          sleep 3
          if ps -p $APP_PID > /dev/null; then
            echo "Application is running successfully"
            echo "Recent logs:"
            tail -n 10 log.txt || echo "No logs available yet"
          else
            echo "Application failed to start"
            echo "Error logs:"
            tail -n 20 log.txt || echo "No logs available"
            exit 1
          fi
          
          echo "Deployment completed successfully"